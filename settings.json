{
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "vim.leader": "<space>",
  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.surround": true,
  "vim.ignorecase": true,
  "vim.smartcase": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.normalModeKeyBindings": [
    {
      "before": [
        "s"
      ],
      "after": [],
    },
    {
      "before": [
        "s",
        "v"
      ],
      "commands": [
        "workbench.action.splitEditor"
      ]
    },
    {
      "before": [
        "s",
        "h"
      ],
      "commands": [
        "workbench.action.splitEditorDown"
      ]
    },
    {
      "before": [
        "s",
        "c"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "s",
        "n"
      ],
      "commands": [
        "workbench.action.moveEditorToNextGroup"
      ]
    },
    {
      "before": [
        "s",
        "p"
      ],
      "commands": [
        "workbench.action.moveEditorToPreviousGroup"
      ]
    },
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    { // which key
      "before": [
        "q"
      ],
      "commands": [
        "whichkey.show"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
      ],
      "commands": [
        "workbench.action.files.save",
        "workbench.action.debug.start"
      ]
    },
    {
      "before": [
        "<leader>",
        "p",
      ],
      "commands": [
        "workbench.action.debug.stop",
      ]
    },
    // -- debug
    {
      "before": [
        "<leader>",
        "d",
        "b"
      ],
      "commands": [
        "editor.debug.action.toggleBreakpoint"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "c"
      ],
      "commands": [
        "workbench.action.debug.continue"
      ],
      "when": [
        "debugState=='stopped'"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "o"
      ],
      "commands": [
        "workbench.action.debug.stepOver"
      ],
    },
    {
      "before": [
        "<C-i>",
      ],
      "commands": [
        "workbench.action.debug.stepInto"
      ],
    },
    {
      "before": [
        "<leader>",
        "d",
        "t"
      ],
      "commands": [
        "workbench.action.debug.stepOut"
      ],
      "when": [
        "  debugState == 'stopped'"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "p"
      ],
      "commands": [
        "workbench.action.debug.pause"
      ],
    },
    {
      "before": [
        "<leader>",
        "d",
        "r"
      ],
      "commands": [
        "workbench.action.debug.restart"
      ],
    },
    {
      "before": [
        "<leader>",
        "d",
        "d"
      ],
      "commands": [
        "workbench.debug.viewlet.action.removeAllBreakpoints"
      ],
    },
    {
      "before": [
        "<leader>",
        "i",
      ],
      "commands": [
        "editor.debug.action.showDebugHover"
      ],
    },
    // -- problem nav
    {
      "before": [
        "<leader>",
        "d",
        "k"
      ],
      "commands": [
        "editor.debug.action.goToPreviousBreakpoint"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "j"
      ],
      "commands": [
        "editor.debug.action.goToNextBreakpoint"
      ]
    },
    // -- git hunk nav
    {
      "before": [
        "<leader>",
        "k"
      ],
      "commands": [
        "workbench.action.editor.previousChange",
        "editor.action.dirtydiff.previous"
      ]
    },
    {
      "before": [
        "<leader>",
        "j"
      ],
      "commands": [
        "workbench.action.editor.nextChange",
        "editor.action.dirtydiff.next"
      ]
    },
    // -- rename symbol
    {
      "before": [
        "<leader>",
        "r",
        "n"
      ],
      "commands": [
        "editor.action.rename",
      ]
    },
  ],
  "vim.visualModeKeyBindings": [
    { // which key
      "before": [
        "<space> "
      ],
      "commands": [
        "whichkey.show"
      ]
    },
    // repeatly indent in visual mode
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "workbench.list.smoothScrolling": true,
  "files.autoSave": "afterDelay",
  "editor.fontSize": 16,
  "editor.cursorSmoothCaretAnimation": true,
  "workbench.colorTheme": "Atom One Dark",
  "workbench.productIconTheme": "material-product-icons",
  "whichkey.bindings": [
    {
      "key": "e",
      "name": "Show tree/explorer view",
      "type": "conditional",
      "bindings": [
        {
          "key": "",
          "name": "default",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "when:sideBarVisible && explorerViewletVisible",
          "name": "Hide explorer",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        }
      ],
    },
    {
      "key": "o",
      "name": "Outline",
      "type": "conditional",
      "bindings": [
        {
          "key": "",
          "name": "default",
          "type": "command",
          "command": "extension.multiCommand.execute",
          "args": {
            "sequence": [
              "outline.focus",
              "outline.focus",
            ]
          },
        },
        {
          "key": "when:outlinerExplorerView.active && view.outline.visible",
          "name": "Hide outline",
          "type": "command",
          "command": "workbench.action.toggleAuxiliaryBar"
        }
      ],
    },
    {
      "key": "g",
      "name": "Source control",
      "type": "command",
      "command": "workbench.view.scm",
    },
    {
      "command": "workbench.action.quickOpen",
      "key": "f",
      "name": "Find file",
      "type": "command"
    },
    {
      "command": "workbench.view.search",
      "key": "F",
      "name": "Search Word",
      "type": "command"
    },
    {
      "command": "search.action.openEditor",
      "key": "w",
      "name": "New Search Editor",
      "type": "command"
    },
    {
      "command": "workbench.action.gotoSymbol",
      "key": "s",
      "name": "Search document symbol",
      "type": "command"
    },
    {
      "command": "workbench.action.showAllSymbols",
      "key": "S",
      "name": "Search project symbol",
      "type": "command"
    },
  ],
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.normal": [
    "#8FBCBB",
    "#434C5E"
  ],
  "vim.statusBarColors.insert": "#BF616A",
  "vim.statusBarColors.visual": "#B48EAD",
  "vim.statusBarColors.visualline": "#B48EAD",
  "vim.statusBarColors.visualblock": "#A3BE8C",
  "vim.statusBarColors.replace": "#D08770",
  "vim.statusBarColors.commandlineinprogress": "#007ACC",
  "vim.statusBarColors.searchinprogressmode": "#007ACC",
  "vim.statusBarColors.easymotionmode": "#007ACC",
  "vim.statusBarColors.easymotioninputmode": "#007ACC",
  "vim.statusBarColors.surroundinputmode": "#007ACC",
  "window.zoomLevel": 0,
  "workbench.startupEditor": "newUntitledFile",
  "editor.wordWrap": "off",
  "editor.accessibilitySupport": "off",
  "workbench.editor.untitled.hint": "hidden",
  "eslint.alwaysShowStatus": true,
  "javascript.suggest.completeFunctionCalls": true,
  "editor.formatOnType": true,
  "editor.formatOnSave": true,
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
  },
  "code-runner.ignoreSelection": true,
  "code-runner.runInTerminal": true,
  "code-runner.fileDirectoryAsCwd": true,
  "code-runner.defaultLanguage": "javascript",
  "javascript.suggest.paths": true,
  "typescript.suggest.paths": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "html",
    "vue"
  ],
  "editor.quickSuggestions": {
    "comments": "on",
    "strings": "on"
  },
  "editor.fontFamily": " JetBrainsMono Nerd Font Mono, Menlo, Monaco, 'Courier New', monospace",
  "editor.minimap.size": "fill",
  "editor.minimap.enabled": false,
  "workbench.colorCustomizations": {
    "[Community Material Theme]": {},
    "statusBar.background": "#8FBCBB",
    "statusBar.noFolderBackground": "#8FBCBB",
    "statusBar.debuggingBackground": "#8FBCBB",
    "statusBar.foreground": "#434C5E",
    "statusBar.debuggingForeground": "#434C5E"
  },
  "debug.console.fontSize": 16,
  "debug.console.acceptSuggestionOnEnter": "on",
  "debug.console.fontFamily": "",
}